# OTA


edify
a mini OTA script language, implemenation under bootable/recovery/edify/, the README is a good start to study edify.

## flex/bision

They are aging unix utils that help to write fast parsers. They are written in C and ouput C code.


Reference: [A good turotial on flex/bision](http://aquamentus.com/flex_bison.html)

Flex can do the parsing work indepently:

#### in
    
    sNaZZle 1.3
    type foo
    type bar
    type bas
    0 0 10 5        foo
    20 10 30 20     foo
    7 8 12 13       bas
    78 124 100 256  bar
    end

#### snail.l

    %{
    #include <iostream>
    using namespace std;
    #define YY_DECL extern "C" int yylex()
    %}
    %%
    [ \t\n]         ;
    [0-9]+\.[0-9]+  { cout << "Found a float:" << yytext << endl; }
    [0-9]+          { cout << "Found an integer:" << yytext << endl; }
    [a-zA-Z0-9]+    { cout << "Found a string: " << yytext << endl; }
    %%
    int main(int argc, char** argv) {
        yylex();
    }
    
commands to compile and run:

#### Makefile
    t:
        bison -d -v snail.y
        flex -o snail.cpp snail.l
        gcc -x c++ snail.tab.c snail.cpp -lstdc++ -lfl
    
Run:

    $ ./a.out < in
    

